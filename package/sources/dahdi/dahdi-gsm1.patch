diff -uP dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi/bfsi.c dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi-gsm1/bfsi.c
--- dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi/bfsi.c	2010-09-06 11:13:58.000000000 +0300
+++ dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi-gsm1/bfsi.c	2010-09-06 11:20:14.000000000 +0300
@@ -36,6 +36,9 @@
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. 
+
+  Dimitar Penev : GSM1 support added in Switchfin
+  Copyright 2010 Switchfin dpn@switchfin.org
 */
 
 #include <linux/module.h>
@@ -550,7 +553,7 @@
 	/* 0 bit delay between FS pulse and first data bit,
 	   multichannel frame mode enabled, 
 	   multichannel tx and rx DMA packing enabled */
-	bfin_write_SPORT0_MCMC2(0x001c);
+	bfin_write_SPORT0_MCMC2(0x101c);//YN was 0x001c //One bit delay between FS pulse and first data bit
 
 }
 #endif
diff -uP dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi/GSM_module_SPI.h dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi-gsm1/GSM_module_SPI.h
--- dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi/GSM_module_SPI.h	1970-01-01 02:00:00.000000000 +0200
+++ dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi-gsm1/GSM_module_SPI.h	2010-09-06 11:20:14.000000000 +0300
@@ -0,0 +1,74 @@
+
+#ifndef GSM_MODULE_SPI
+
+
+
+/* Modified by Alex Tao */
+#ifdef CONFIG_4FX_SPI_INTERFACE
+#define SPI_BAUDS   5  /* 12.5 MHz for 100MHz system clock    */
+#define SPI_NCSA    3  /* nCS bit for SPI data                */
+#define SPI_NCSB    12 /* nCS bit for SPI mux                 */
+#else
+#define SPI_BAUDS   49  /* 13.4 MHz for 133MHz system clock    */
+#define SPI_BAUDS_GSM 49 //1.33MHz for 133Mhz system clock; 4 MHz allowed //YN
+/* Use other PF signals */
+#define SPI_NCSA    8    /* Simulate SPORT interface as SPI */
+#define SPI_NCSB    9
+#endif
+
+/* Keep these obsolete macros */
+#ifndef SF_IP01
+#define FX_MAX_PORTS   8  // max number of ports in system
+#else
+#define FX_MAX_PORTS   1
+#endif
+
+#define FX_LED_RED     1
+
+//penev
+#define GSM_MODULE_SPI
+
+
+//#define SPORT_INTERFACE_DEBUG
+#ifdef SPORT_INTERFACE_DEBUG
+#define PRINTK(args...) printk(args)
+#else
+#define PRINTK(args...)
+#endif
+
+#ifdef SPORT_INTERFACE_DEBUG
+static int txCnt = 0, rxCnt = 0;
+#endif
+
+#ifndef SPI_NCSB
+/* Use other PF signals */
+#define SPI_NCSA    8    /* Simulate SPORT interface as SPI */
+#define SPI_NCSB    9
+#endif
+#define SPORT_nPWR	12
+
+#ifndef SPORT1_REGBASE
+#define SPORT1_REGBASE 0xFFC00900
+#endif
+
+#define DEFINE_SPORT1_REG(reg, off) \
+static inline u16 sport1_read_##reg(void) \
+            { return *(volatile unsigned short*)(SPORT1_REGBASE + off); } \
+static inline void sport1_write_##reg(u16 v) \
+            {*(volatile unsigned short*)(SPORT1_REGBASE + off) = v;\
+             __builtin_bfin_ssync();}
+
+
+DEFINE_SPORT1_REG(TCR1,0x00)
+DEFINE_SPORT1_REG(TCR2,0x04)
+DEFINE_SPORT1_REG(TCLKDIV,0x08)
+DEFINE_SPORT1_REG(TFSDIV,0x0C)
+
+DEFINE_SPORT1_REG(RCR1, 0x20)
+DEFINE_SPORT1_REG(RCR2, 0x24)
+DEFINE_SPORT1_REG(RCLKDIV,0x28)
+DEFINE_SPORT1_REG(RFSDIV,0x2C)
+DEFINE_SPORT1_REG(STAT,0x30)
+
+#endif
+
diff -uP dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi/sport_interface.c dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi-gsm1/sport_interface.c
--- dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi/sport_interface.c	2010-09-06 11:13:58.000000000 +0300
+++ dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi-gsm1/sport_interface.c	2010-09-06 11:20:14.000000000 +0300
@@ -46,56 +46,20 @@
 #include <asm/uaccess.h>
 
 #include "sport_interface.h"
+#include "GSM_module_SPI.h"//YN
 
 
-//#define SPORT_INTERFACE_DEBUG
-#ifdef SPORT_INTERFACE_DEBUG
-#define PRINTK(args...) printk(args)
-#else
-#define PRINTK(args...)
-#endif
-
-#ifdef SPORT_INTERFACE_DEBUG
-static int txCnt = 0, rxCnt = 0;
-#endif
-
-#ifndef SPI_NCSB
-/* Use other PF signals */
-#define SPI_NCSA    8    /* Simulate SPORT interface as SPI */
-#define SPI_NCSB    9
-#endif
-#define SPORT_nPWR	12
-
-#ifndef SPORT1_REGBASE
-#define SPORT1_REGBASE 0xFFC00900
-#endif
-
-#define DEFINE_SPORT1_REG(reg, off) \
-static inline u16 sport1_read_##reg(void) \
-            { return *(volatile unsigned short*)(SPORT1_REGBASE + off); } \
-static inline void sport1_write_##reg(u16 v) \
-            {*(volatile unsigned short*)(SPORT1_REGBASE + off) = v;\
-             __builtin_bfin_ssync();}
-
-
-DEFINE_SPORT1_REG(TCR1,0x00)
-DEFINE_SPORT1_REG(TCR2,0x04)
-DEFINE_SPORT1_REG(TCLKDIV,0x08)
-DEFINE_SPORT1_REG(TFSDIV,0x0C)
-
-DEFINE_SPORT1_REG(RCR1, 0x20)
-DEFINE_SPORT1_REG(RCR2, 0x24)
-DEFINE_SPORT1_REG(RCLKDIV,0x28)
-DEFINE_SPORT1_REG(RFSDIV,0x2C)
-DEFINE_SPORT1_REG(STAT,0x30)
-
-
-static int sport_configure(int baud);
+int sport_configure(int baud);
 
 
 /* When FX_MODE, we need not fill the struct of sport_config */
-static int sport_configure(int baud)
+int sport_configure(int baud)
 {
+
+	//Disable the receiving and transmitter	
+	sport1_write_TCR1( sport1_read_TCR1() & ~(TSPEN) ); 
+	sport1_write_RCR1( sport1_read_RCR1() & ~(RSPEN) ); 
+
 	/* Register SPORTx_TCR1 ( relative details pls refer 12-12 of hardware reference ) 
 	        TCKFE ( Clock Falling Edge Select )   ( Bit14 ) 
           	LTFS ( Bit11) :  0 - Active high TFS; 1 - Active low TFS
@@ -252,6 +216,23 @@
 {
 	sport_configure(baud); /* Default should be 0x1 */
 
+//Raise chip selects PF8 and PF9; ADDEd by YN
+#if (defined(CONFIG_BF533) || defined(CONFIG_BF532))
+	bfin_write_FIO_FLAG_S(1<<8);
+	bfin_write_FIO_FLAG_S(1<<9);
+#endif
+#if (defined(CONFIG_BF536) || defined(CONFIG_BF537))
+	bfin_write_PORTFIO_SET(1<<8);
+	bfin_write_PORTFIO_SET(1<<9);
+#endif
+#if (defined(CONFIG_BF533) || defined(CONFIG_BF532))
+	bfin_write_FIO_FLAG_S( 1 << SPORT_nPWR );
+#endif
+#if (defined(CONFIG_BF536) || defined(CONFIG_BF537))
+	bfin_write_PORTFIO_SET( 1 << SPORT_nPWR );
+#endif
+__builtin_bfin_ssync();//YN
+
 	PRINTK("Before setting, FIOD_DIR = 0x%04x\n", bfin_read_FIO_DIR());
 	PRINTK("Before setting, new_chip_select_mask = 0x%04x\n", new_chip_select_mask);
 	if (new_chip_select_mask & 0xff00) 
@@ -276,9 +257,6 @@
 	bfin_write_PORTFIO_SET( 1 << SPORT_nPWR );
 #endif
 	
-	//Enable SPORT1 interface
-	sport1_write_TCR1( sport1_read_TCR1() | TSPEN );
-
 	return 0; /* succeed */
 }
 
@@ -318,6 +296,7 @@
   	udelay(1000); 
 }
 
+EXPORT_SYMBOL( sport_configure);
 EXPORT_SYMBOL( sport_tx_byte );
 EXPORT_SYMBOL( sport_rx_byte );
 EXPORT_SYMBOL( sport_interface_init );
diff -uP dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi/fx.c dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi-gsm1/
fx.c
--- dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi/fx.c 2010-09-06 11:13:58.000000000 +0300
+++ dahdi-linux-complete-2.3.0.1+2.3.0/linux/drivers/dahdi-gsm1/fx.c
@@ -41,6 +41,10 @@
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
 
+
+#include "GSM_module_SPI.h" //YN
+char  port_type[FX_MAX_PORTS];//YN
+
 #define FX_LED_OFF     0
 #define FX_LED_ON      1
 #define FX_LED_RED     1
--- dahdi-linux-complete-2.3.0.1+2.3.0/tools/Makefile	2010-11-11 15:01:52.000000000 +0200
+++ dahdi-linux-complete-2.3.0.1+2.3.0/tools/Makefile	2010-11-11 15:02:16.000000000 +0200
@@ -111,7 +111,7 @@
 UTILS		+= patgen pattest patlooptest hdlcstress hdlctest hdlcgen \
 		   hdlcverify timertest dahdi_maint
 
-BINS:=fxotune fxstest sethdlc dahdi_cfg dahdi_diag dahdi_monitor dahdi_speed dahdi_test dahdi_scan dahdi_tool dahdi_maint
+BINS:=fxotune fxstest sethdlc dahdi_cfg dahdi_diag dahdi_monitor dahdi_speed dahdi_test dahdi_scan dahdi_tool dahdi_maint gsm-sms
 BINS:=$(filter-out $(MENUSELECT_UTILS),$(BINS))
 MAN_PAGES:=$(wildcard $(BINS:%=doc/%.8))
 
