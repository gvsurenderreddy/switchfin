#!/bin/sh
# Script for reflashing uClinux or u-boot image to SPI flash
SCRIPTNAME=`basename $0`
case ${SCRIPTNAME} in
	"flashupdate" )
		DEFAULTFILENAME=uImage
		MTDPART=/dev/mtd1
		;;
	"bootloaderupdate" )
		DEFAULTFILENAME=app.ldr
		MTDPART=/dev/mtd4
		;;
	* )
		echo "Could not determine what to update.  Exiting."
		exit 1
		;;
esac
[ ! -d /persistent/tmp ] && mkdir /persistent/tmp
PID=$$
SAVEDFILENAME=/persistent/tmp/image-${PID}.bin
NVRAMFILENAME=/persistent/tmp/nvram-${PID}.txt
MD5FILENAME=/persistent/tmp/image-${PID}.MD5
IMAGEFILENAME=/persistent/tmp/image-${PID}.img
USIGFILENAME=/persistent/tmp/image-${PID}.sig
GOLDUSIG=/etc/uimagesig
RESULTFILENAME=/var/lib/asterisk/static-http/flashresult

if [ "$1" = "" ]; then
	echo "Usage: ${SCRIPTNAME} <imageURL>"
	echo "       OR ${SCRIPTNAME} tftp <hostname> [<filename>]"
	echo "       OR ${SCRIPTNAME} file [</path/to/filename>]"
	exit 1
fi

# Get the image from the source
if [ "$1" = "tftp" ]; then
	if [ "$2" = "" ]; then
		echo "Must specify a hostname when downloading firmware via TFTP."
		echo "FAIL: tftphost not specified" > ${RESULTFILENAME}
		exit 1
	fi
	HOST=$2
	if [ "$3" = "" ]; then
			FILENAME=${DEFAULTFILENAME}
	else
			FILENAME=$3
	fi
	echo "Downloading ${FILENAME} from host ${HOST} via TFTP"
	tftp -l ${SAVEDFILENAME} -r ${FILENAME} -g ${HOST}
	if [ "$?" != "0" ]; then 
		echo "Downloading firmware via TFTP failed!"
		rm -f ${SAVEDFILENAME}
		echo "FAIL: ${FILENAME} tftp transfer failed" > ${RESULTFILENAME}
		exit 1
	fi
else
	if [ "$1" = "file" ]; then
		if [ "$2" = "" ]; then
				FILENAME=${DEFAULTFILENAME}
		else
				FILENAME=$2
		fi
		SAVEDFILENAME=${FILENAME}
	else
		FILEURL=$1
		FILENAME=$1
		echo "Downloading URL ${FILEURL}"
		wget ${FILEURL} -O ${SAVEDFILENAME}
		if [ "$?" != "0" ]; then 
			echo "Downloading firmware via wget failed!"
			echo "FAIL: ${FILENAME} wget download failed." > ${RESULTFILENAME}
			rm -f ${SAVEDFILENAME}
			exit 1
		fi
	fi
fi

if [ ! -f "${SAVEDFILENAME}" ]; then
	echo "File ${SAVEDFILENAME} does not exist."
	echo "FAIL: ${FILENAME} temp image does not exist." > ${RESULTFILENAME}
	exit 1
fi

# Commit the image to FLASH 

#Check MD5 checksum to verify the image 
echo "Verifying the MD5 checksum..."
FILESIZE=`ls -l ${SAVEDFILENAME} | cut -c 30-43 | xargs basename`
NUMBLOCKS=`expr $FILESIZE / 32`
NUMBLOCKS=`expr $NUMBLOCKS - 1 `
dd if=${SAVEDFILENAME} of=${MD5FILENAME} bs=32 skip=${NUMBLOCKS}
dd if=${SAVEDFILENAME} of=${IMAGEFILENAME} bs=32 count=${NUMBLOCKS}
dd if=${IMAGEFILENAME} of=${USIGFILENAME} bs=4 count=1

rm -f ${SAVEDFILENAME}
TEST=`md5sum ${IMAGEFILENAME} | cut -c 1-32`
GOLD=`cat ${MD5FILENAME}`

if [ $TEST != $GOLD  ]; then
	echo "MD5 checksum did not verify! FLASH programming aborted"
	echo "FAIL: ${FILENAME} MD5 checksum did not validate" > ${RESULTFILENAME}
# remove temp files.
	rm -f ${IMAGEFILENAME} ${MD5FILENAME} ${USIGFILENAME}
	sync 
	exit 1
fi 

FILESIZE=`ls -l ${IMAGEFILENAME} | cut -c 30-43 | xargs basename`
	
if [ ${FILESIZE} -le 0 ] ; then 
	echo "The filesize ${FILESIZE} is invalid"
	rm -f ${IMAGEFILENAME} ${MD5FILENAME} ${USIGFILENAME}
	sync 
	exit 1
fi 

echo "Downloaded firmware ${SAVEDFILENAME} program size is ${FILESIZE}"
	
echo "Writing firmware to FLASH -- DO NOT REBOOT!!!!..."
/bin/eraseall ${MTDPART}
/bin/nandwrite ${MTDPART} ${IMAGEFILENAME}
#/bin/cp ${IMAGEFILENAME} ${MTDPART}
echo "Verifying FLASH..."
if cmp ${IMAGEFILENAME} ${MTDPART} 2>&1 | grep -q -i EOF; then
	echo "PASSED"
	echo "PASS: ${FILENAME} successfully programmed" > ${RESULTFILENAME}
else
	echo "FAILED"
	cmp ${IMAGEFILENAME} ${MTDPART}
	echo "FAIL: ${FILENAME} saved image did not verify" > ${RESULTFILENAME}
fi
rm -f ${IMAGEFILENAME} ${MD5FILENAME} ${USIGFILENAME}
echo "Finished writing firmware to FLASH..."

