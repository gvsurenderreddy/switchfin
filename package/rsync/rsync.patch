--- rsync-2.6.5-orig/config.sub	2004-03-06 07:00:16.000000000 +0000
+++ rsync-2.6.5/config.sub	2008-02-18 20:26:58.000000000 +0000
@@ -118,7 +118,7 @@
 # Here we must recognize all the valid KERNEL-OS combinations.
 maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
 case $maybe_os in
-  nto-qnx* | linux-gnu* | linux-dietlibc | kfreebsd*-gnu* | netbsd*-gnu* | storm-chaos* | os2-emx* | rtmk-nova*)
+  nto-qnx* | linux-gnu* | linux-dietlibc | linux-uclibc* | kfreebsd*-gnu* | netbsd*-gnu* | storm-chaos* | os2-emx* | rtmk-nova*)
     os=-$maybe_os
     basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
     ;;
@@ -230,6 +230,7 @@
 	| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \
 	| am33_2.0 \
 	| arc | arm | arm[bl]e | arme[lb] | armv[2345] | armv[345][lb] | avr \
+        | bfin \
 	| c4x | clipper \
 	| d10v | d30v | dlx | dsp16xx \
 	| fr30 | frv \
@@ -297,7 +298,7 @@
 	| alphapca5[67]-* | alpha64pca5[67]-* | arc-* \
 	| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \
 	| avr-* \
-	| bs2000-* \
+	| bfin-* | bs2000-* \
 	| c[123]* | c30-* | [cjt]90-* | c4x-* | c54x-* | c55x-* | c6x-* \
 	| clipper-* | cydra-* \
 	| d10v-* | d30v-* | dlx-* \
--- rsync-2.6.5/util.c	2005-05-03 12:44:47.000000000 -0400
+++ rsync-2.6.5/util.c	2008-09-05 21:34:23.000000000 -0400
@@ -399,7 +399,7 @@
 /** Fork and record the pid of the child. **/
 pid_t do_fork(void)
 {
-	pid_t newpid = fork();
+	pid_t newpid = vfork();
 
 	if (newpid != 0  &&  newpid != -1) {
 		all_pids[num_pids++] = newpid;
--- rsync-2.6.5/socket.c	2005-04-14 12:08:12.000000000 -0400
+++ rsync-2.6.5/socket.c	2008-09-05 21:34:00.000000000 -0400
@@ -502,7 +502,7 @@
 
 		signal(SIGCHLD, sigchld_handler);
 
-		if ((pid = fork()) == 0) {
+		if ((pid = vfork()) == 0) {
 			int ret;
 			for (i = 0; sp[i] >= 0; i++)
 				close(sp[i]);
@@ -646,7 +646,7 @@
 {
 	int i;
 
-	if (fork()) {
+	if (vfork()) {
 		_exit(0);
 	}
 
@@ -768,7 +768,7 @@
 	}
 	if (verbose >= 2)
 		rprintf(FINFO, "Running socket program: \"%s\"\n", prog);
-	if (fork() == 0) {
+	if (vfork() == 0) {
 		close(fd[0]);
 		close(0);
 		close(1);
