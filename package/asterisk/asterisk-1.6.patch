--- asterisk/include/asterisk/compat.h	2010-04-18 00:42:23.000000000 +0300
+++ asterisk/include/asterisk/compat.h	2010-04-18 00:42:53.000000000 +0300
@@ -187,7 +187,7 @@
 #define GLOB_ABORTED GLOB_ABEND
 #endif
 #include <glob.h>
-#ifdef SOLARIS
+#if defined(SOLARIS) || defined(__BLACKFIN__)
 #define MY_GLOB_FLAGS   GLOB_NOCHECK
 #else
 #define MY_GLOB_FLAGS   (GLOB_NOMAGIC|GLOB_BRACE)
--- asterisk/res/ael/ael.flex	2010-04-18 00:56:38.000000000 +0300
+++ asterisk/res/ael/ael.flex	2010-04-18 00:57:08.000000000 +0300
@@ -595,7 +595,7 @@
 		   snprintf(fnamebuf2,sizeof(fnamebuf2), "%s/%s", (char *)ast_config_AST_CONFIG_DIR, fnamebuf);
 		   ast_copy_string(fnamebuf,fnamebuf2,sizeof(fnamebuf));
 		}
-#ifdef SOLARIS
+#if defined(SOLARIS) || defined (__BLACKFIN__)
 			glob_ret = glob(fnamebuf, GLOB_NOCHECK, NULL, &globbuf);
 #else
 			glob_ret = glob(fnamebuf, GLOB_NOMAGIC|GLOB_BRACE, NULL, &globbuf);
--- asterisk/res/ael/ael_lex.c	2010-04-18 00:59:56.000000000 +0300
+++ asterisk/res/ael/ael_lex.c	2010-04-18 01:03:14.000000000 +0300
@@ -1962,7 +1962,7 @@
 		   snprintf(fnamebuf2,sizeof(fnamebuf2), "%s/%s", (char *)ast_config_AST_CONFIG_DIR, fnamebuf);
 		   ast_copy_string(fnamebuf,fnamebuf2,sizeof(fnamebuf));
 		}
-#ifdef SOLARIS
+#if defined(SOLARIS) || defined(__BLACKFIN__)
 			glob_ret = glob(fnamebuf, GLOB_NOCHECK, NULL, &globbuf);
 #else
 			glob_ret = glob(fnamebuf, GLOB_NOMAGIC|GLOB_BRACE, NULL, &globbuf);
--- asterisk/main/frame.c	2010-04-18 02:02:03.000000000 +0300
+++ asterisk/main/frame.c	2010-04-18 02:03:50.000000000 +0300
@@ -103,7 +103,7 @@
 	{ AST_FORMAT_SLINEAR, "slin", 8000, "16 bit Signed Linear PCM", 160, 10, 70, 10, 20, AST_SMOOTHER_FLAG_BE }, /*!< Signed linear */
 	{ AST_FORMAT_LPC10, "lpc10", 8000, "LPC10", 7, 20, 20, 20, 20 },                                       /*!< codec_lpc10.c */ 
 	{ AST_FORMAT_G729A, "g729", 8000, "G.729A", 10, 10, 230, 10, 20, AST_SMOOTHER_FLAG_G729 },             /*!< Binary commercial distribution */
-	{ AST_FORMAT_SPEEX, "speex", 8000, "SpeeX", 10, 10, 60, 10, 20 },                                      /*!< codec_speex.c */
+	{ AST_FORMAT_SPEEX, "speex", 8000, "SpeeX", 10, 10, 300, 10, 20 },                                      /*!< codec_speex.c */
 	{ AST_FORMAT_ILBC, "ilbc", 8000, "iLBC", 50, 30, 30, 30, 30 },                                         /*!< codec_ilbc.c */ /* inc=30ms - workaround */
 	{ AST_FORMAT_G726_AAL2, "g726aal2", 8000, "G.726 AAL2", 40, 10, 300, 10, 20 },                         /*!< codec_g726.c */
 	{ AST_FORMAT_G722, "g722", 16000, "G722", 80, 10, 150, 10, 20 },                                       /*!< codec_g722.c */
@@ -1434,7 +1434,9 @@
 
 	switch(f->subclass) {
 	case AST_FORMAT_SPEEX:
-		samples = speex_samples(f->data.ptr, f->datalen);
+		/* DR: hard coded for quality=8 mode.
+		300 bits (38 bytes) converted to 160 samples */
+		samples = 160 * (f->datalen / 38);		
 		break;
 	case AST_FORMAT_G723_1:
 		samples = g723_samples(f->data.ptr, f->datalen);
--- asterisk/apps/app_voicemail.c	2010-04-30 22:41:57.000000000 +0300
+++ asterisk/apps/app_voicemail.c	2010-04-30 22:42:59.000000000 +0300
@@ -3128,7 +3128,7 @@
 					}
 					/* Read out in small chunks */
 					for (offset = 0; offset < colsize2; offset += CHUNKSIZE) {
-						if ((fdm = mmap(NULL, CHUNKSIZE, PROT_READ | PROT_WRITE, MAP_SHARED, fd, offset)) == MAP_FAILED) {
+						if ((fdm = mmap(NULL, CHUNKSIZE, PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, offset)) == MAP_FAILED) {
 							ast_log(AST_LOG_WARNING, "Could not mmap the output file: %s (%d)\n", strerror(errno), errno);
 							SQLFreeHandle(SQL_HANDLE_STMT, stmt);
 							ast_odbc_release_obj(obj);
@@ -3513,7 +3513,7 @@
 		fdlen = lseek(fd, 0, SEEK_END);
 		lseek(fd, 0, SEEK_SET);
 		printf("Length is %zd\n", fdlen);
-		fdm = mmap(NULL, fdlen, PROT_READ | PROT_WRITE, MAP_SHARED,fd, 0);
+		fdm = mmap(NULL, fdlen, PROT_READ | PROT_WRITE, MAP_PRIVATE,fd, 0);
 		if (fdm == MAP_FAILED) {
 			ast_log(AST_LOG_WARNING, "Memory map failed!\n");
 			res = -1;
--- asterisk/main/manager.c	2010-04-30 22:45:08.000000000 +0300
+++ asterisk/main/manager.c	2010-04-30 22:45:35.000000000 +0300
@@ -3936,7 +3936,7 @@
 		fprintf(s.f, "%c", 0);
 
 		if ((l = ftell(s.f))) {
-			if ((buf = mmap(NULL, l, PROT_READ | PROT_WRITE, MAP_SHARED, s.fd, 0))) {
+			if ((buf = mmap(NULL, l, PROT_READ | PROT_WRITE, MAP_PRIVATE, s.fd, 0))) {
 				if (format == FORMAT_XML || format == FORMAT_HTML)
 					xml_translate(&out, buf, params, format);
 				else
--- asterisk/main/http.c	2010-04-30 22:59:50.000000000 +0300
+++ asterisk/main/http.c	2010-04-30 23:01:13.000000000 +0300
@@ -208,7 +208,9 @@
 		goto out403;
 	}
 
-	ast_strftime(buf, sizeof(buf), "%a, %d %b %Y %H:%M:%S %Z", ast_localtime(&now, &tm, "GMT"));
+	//ast_strftime(buf, sizeof(buf), "%a, %d %b %Y %H:%M:%S %Z", ast_localtime(&now, &tm, "GMT"));
+	buf[0]=0; //Neds to be revised!!!
+
 	fprintf(ser->f, "HTTP/1.1 200 OK\r\n"
 		"Server: Asterisk/%s\r\n"
 		"Date: %s\r\n"
@@ -741,7 +743,9 @@
 		char timebuf[256];
 		struct ast_tm tm;
 
-		ast_strftime(timebuf, sizeof(timebuf), "%a, %d %b %Y %H:%M:%S %Z", ast_localtime(&now, &tm, "GMT"));
+		//ast_strftime(timebuf, sizeof(timebuf), "%a, %d %b %Y %H:%M:%S %Z", ast_localtime(&now, &tm, "GMT"));
+		timebuf[0]=0; //Needs to be revised!!!
+	
 		fprintf(ser->f,
 			"HTTP/1.1 %d %s\r\n"
 			"Server: Asterisk/%s\r\n"
