--- asterisk/res/ael/ael.flex	2010-06-23 14:06:40.000000000 -0700
+++ asterisk/res/ael/ael.flex	2011-11-06 10:24:34.906467328 -0800
@@ -595,7 +595,7 @@
 		   snprintf(fnamebuf2,sizeof(fnamebuf2), "%s/%s", (char *)ast_config_AST_CONFIG_DIR, fnamebuf);
 		   ast_copy_string(fnamebuf,fnamebuf2,sizeof(fnamebuf));
 		}
-#ifdef SOLARIS
+#if defined(SOLARIS) || defined (__BLACKFIN__)
 			glob_ret = glob(fnamebuf, GLOB_NOCHECK, NULL, &globbuf);
 #else
 			glob_ret = glob(fnamebuf, GLOB_NOMAGIC|GLOB_BRACE, NULL, &globbuf);
--- asterisk/res/ael/ael_lex.c	2010-10-28 13:00:06.000000000 -0700
+++ asterisk/res/ael/ael_lex.c	2011-11-06 10:24:34.906467328 -0800
@@ -1976,7 +1976,7 @@
 		   snprintf(fnamebuf2,sizeof(fnamebuf2), "%s/%s", (char *)ast_config_AST_CONFIG_DIR, fnamebuf);
 		   ast_copy_string(fnamebuf,fnamebuf2,sizeof(fnamebuf));
 		}
-#ifdef SOLARIS
+#if defined(SOLARIS) || defined(__BLACKFIN__)
 			glob_ret = glob(fnamebuf, GLOB_NOCHECK, NULL, &globbuf);
 #else
 			glob_ret = glob(fnamebuf, GLOB_NOMAGIC|GLOB_BRACE, NULL, &globbuf);
--- asterisk/main/frame.c	2010-06-17 10:23:43.000000000 -0700
+++ asterisk/main/frame.c	2011-11-06 10:24:34.910467328 -0800
@@ -103,8 +103,8 @@
 	{ AST_FORMAT_SLINEAR, "slin", 8000, "16 bit Signed Linear PCM", 160, 10, 70, 10, 20, AST_SMOOTHER_FLAG_BE }, /*!< Signed linear */
 	{ AST_FORMAT_LPC10, "lpc10", 8000, "LPC10", 7, 20, 20, 20, 20 },                                       /*!< codec_lpc10.c */ 
 	{ AST_FORMAT_G729A, "g729", 8000, "G.729A", 10, 10, 230, 10, 20, AST_SMOOTHER_FLAG_G729 },             /*!< Binary commercial distribution */
-	{ AST_FORMAT_SPEEX, "speex", 8000, "SpeeX", 10, 10, 60, 10, 20 },                                      /*!< codec_speex.c */
-	{ AST_FORMAT_SPEEX16, "speex16", 16000, "SpeeX 16khz", 10, 10, 60, 10, 20 },                          /*!< codec_speex.c */
+	{ AST_FORMAT_SPEEX, "speex", 8000, "SpeeX", 10, 10, 300, 10, 20 },                                     /*!< codec_speex.c */
+	{ AST_FORMAT_SPEEX16, "speex16", 16000, "SpeeX 16khz", 10, 10, 300, 10, 20 },                          /*!< codec_speex.c */
 	{ AST_FORMAT_ILBC, "ilbc", 8000, "iLBC", 50, 30, 30, 30, 30 },                                         /*!< codec_ilbc.c */ /* inc=30ms - workaround */
 	{ AST_FORMAT_G726_AAL2, "g726aal2", 8000, "G.726 AAL2", 40, 10, 300, 10, 20 },                         /*!< codec_g726.c */
 	{ AST_FORMAT_G722, "g722", 16000, "G722", 80, 10, 150, 10, 20 },                                       /*!< codec_g722.c */
@@ -1449,7 +1449,9 @@
 
 	switch (f->subclass.codec) {
 	case AST_FORMAT_SPEEX:
-		samples = speex_samples(f->data.ptr, f->datalen);
+		/* DR: hard coded for quality=8 mode.
+		300 bits (38 bytes) converted to 160 samples */
+		samples = 160 * (f->datalen / 38);		
 		break;
 	case AST_FORMAT_SPEEX16:
 		samples = 2 * speex_samples(f->data.ptr, f->datalen);
--- asterisk/apps/app_voicemail.c	2011-02-08 11:41:42.000000000 -0800
+++ asterisk/apps/app_voicemail.c	2011-11-06 10:24:34.910467328 -0800
@@ -3366,7 +3366,7 @@
 					}
 					/* Read out in small chunks */
 					for (offset = 0; offset < colsize2; offset += CHUNKSIZE) {
-						if ((fdm = mmap(NULL, CHUNKSIZE, PROT_READ | PROT_WRITE, MAP_SHARED, fd, offset)) == MAP_FAILED) {
+						if ((fdm = mmap(NULL, CHUNKSIZE, PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, offset)) == MAP_FAILED) {
 							ast_log(AST_LOG_WARNING, "Could not mmap the output file: %s (%d)\n", strerror(errno), errno);
 							SQLFreeHandle(SQL_HANDLE_STMT, stmt);
 							ast_odbc_release_obj(obj);
@@ -3751,7 +3751,7 @@
 		fdlen = lseek(fd, 0, SEEK_END);
 		lseek(fd, 0, SEEK_SET);
 		printf("Length is %zd\n", fdlen);
-		fdm = mmap(NULL, fdlen, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);
+		fdm = mmap(NULL, fdlen, PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, 0);
 		if (fdm == MAP_FAILED) {
 			ast_log(AST_LOG_WARNING, "Memory map failed!\n");
 			res = -1;
--- asterisk/codecs/Makefile	2010-03-23 07:22:27.000000000 -0700
+++ asterisk/codecs/Makefile	2011-11-06 10:24:34.914467328 -0800
@@ -51,3 +51,6 @@
 
 $(if $(filter codec_g722,$(EMBEDDED_MODS)),modules.link,codec_g722.so): g722/g722_encode.o g722/g722_decode.o
 g722/g722_encode.o g722/g722_decode.o: _ASTCFLAGS+=$(call MOD_ASTCFLAGS,codec_g722)
+
+$(if $(filter codec_g729,$(EMBEDDED_MODS)),modules.link,codec_g729.so):
+	$(CC) -o codec_g729.so -shared $(ASTLDFLAGS)  codec_g729.o $(ASTTOPDIR)/../uClinux-dist/lib/libbfgdots/g729/src.fdpic/partial_local.o
--- asterisk/include/asterisk/stringfields.h	2009-12-21 10:51:17.000000000 -0800
+++ asterisk/include/asterisk/stringfields.h	2011-11-06 10:24:34.914467328 -0800
@@ -295,7 +295,7 @@
 
 /* the type of storage used to track how many bytes were allocated for a field */
 
-typedef uint16_t ast_string_field_allocation;
+typedef uint8_t ast_string_field_allocation;
 
 /*!
   \brief Macro to provide access to the allocation field that lives immediately in front of a string field
--- asterisk/makeopts.in	2010-12-17 15:52:04.000000000 -0800
+++ asterisk/makeopts.in	2011-11-06 10:24:34.914467328 -0800
@@ -85,7 +85,7 @@
 astvarlibdir = @astvarlibdir@
 ASTVARLIBDIR = @astvarlibdir@
 ASTDATADIR = @astdatadir@
-ASTDBDIR = @astdbdir@
+ASTDBDIR = /persistent
 ASTKEYDIR = @astkeydir@
 ASTSPOOLDIR = @astspooldir@
 ASTLOGDIR = @astlogdir@
--- asterisk/configure	2011-01-27 09:03:01.000000000 -0800
+++ asterisk/configure	2011-11-06 10:24:34.922467328 -0800
@@ -13104,7 +13104,7 @@
 fi
 if test "x$ac_cv_func_fork_works" = xcross; then
   case $host in
-    *-*-amigaos* | *-*-msdosdjgpp* | *-*-uclinux* )
+    *-*-amigaos* | *-*-msdosdjgpp* | *-*-uclinux* | *-*-linux-uclibc* | bfin-*-* )
       # Override, as these systems have only a dummy fork() stub
       ac_cv_func_fork_works=no
       ;;
--- asterisk/channels/sig_analog.c	2010-11-24 14:49:48.000000000 -0800
+++ asterisk/channels/sig_analog.c	2011-11-06 10:24:34.922467328 -0800
@@ -47,7 +47,7 @@
  * before dialing on it.  Certain FXO interfaces always think they're out of
  * service with this method however.
  */
-/* #define DAHDI_CHECK_HOOKSTATE */
+#define DAHDI_CHECK_HOOKSTATE
 
 #define POLARITY_IDLE 0
 #define POLARITY_REV    1
@@ -818,6 +818,7 @@
 			if (offhook) {
 				return 1;
 			}
+			ast_debug(1, "No battery on Channel %d, can't use\n", p->channel);
 			return 0;
 #endif
 		/* TDM FXS card, "offhook" means someone took the hook off so it's unavailable! */
--- asterisk/main/asterisk.c	2011-02-10 14:39:30.000000000 -0800
+++ asterisk/main/asterisk.c	2011-11-08 12:30:24.703012625 -0800
@@ -3622,8 +3622,11 @@
 
 		/* Don't let the canary child kill Asterisk, if it dies immediately */
 		sigaction(SIGPIPE, &ignore_sig_handler, NULL);
-
-		canary_pid = fork();
+	#ifdef HAVE_WORKING_FORK
+        	canary_pid = fork();
+	#else
+        	canary_pid = vfork();
+	#endif
 		if (canary_pid == 0) {
 			char canary_binary[128], *lastslash, ppid[12];
 
--- asterisk/main/app.c	2011-01-19 12:24:57.000000000 -0800
+++ asterisk/main/app.c	2011-11-08 12:27:51.839012668 -0800
@@ -2095,7 +2095,7 @@
 	sigfillset(&signal_set);
 	pthread_sigmask(SIG_BLOCK, &signal_set, &old_set);
 
-	pid = fork();
+	pid = vfork();
 
 	if (pid != 0) {
 		/* Fork failed or parent */
